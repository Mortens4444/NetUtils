namespace NetUtils.Ports
{
    public class PortIdentifier
    {
        private readonly List<Port> portDefinitions = new()
        {
            new Port(1, new List<Service> { new Service("tcpmux", "Protocols.TCP Port Service Multiplexer") }),
            new Port(2, new List<Service> { new Service("compressnet", "Management Utility") }),
            new Port(3, new List<Service> { new Service("compressnet", "Compression Process") }),
            new Port(5, new List<Service> { new Service("rje", "Remote Job Entry") }),
            new Port(7, new List<Service> { new Service("echo", "Echo") }),
            new Port(9, new List<Service> { new Service("discard", "Discard") }),
            new Port(11, new List<Service> { new Service("systat", "Active Users") }),
            new Port(13, new List<Service> { new Service("daytime", "Daytime") }),
            new Port(15, new List<Service> { new Service("netstat", "Was netstat, currently unassigned") }),
            new Port(17, new List<Service> { new Service("qotd", "Quote of the day", "quote") }),
            new Port(18, new List<Service> { new Service("msp", "Message Send Protocol") }),
            new Port(19, new List<Service> { new Service("chargen", "Character generator") }),
            new Port(20, new List<Service> { new Service("ftp-data", "File Transfer [Default Data]") }),
            new Port(21, new List<Service> { new Service("ftp", "File Transfer [Control]") }),
            new Port(22, new List<Service> { new Service("ssh", "Unassigned [SSH Remote Login Protocol]") }),
            new Port(23, new List<Service> { new Service("telnet", "Telnet") }),
            new Port(24, new List<Service> { new Service(String.Empty, "Priv-mail: any private mail system") }),
            new Port(25, new List<Service> { new Service("smtp", "Simple Mail Transfer", "mail") }),
            new Port(27, new List<Service> { new Service("nsw-fe", "NSW User System FE") }),
            new Port(29, new List<Service> { new Service("msg-icp", "MSG ICP") }),
            new Port(31, new List<Service> { new Service("msg-auth", "MSG Authentication") }),
            new Port(33, new List<Service> { new Service("dsp", "Display Support Protocol") }),
            new Port(35, new List<Service> { new Service(String.Empty, "Any private printer server protocol") }),
            new Port(37, new List<Service> { new Service("time", "Time") }),
            new Port(38, new List<Service> { new Service("rap", "Route Access Protocol") }),
            new Port(39, new List<Service> { new Service("rlp", "Resource Location Protocol", "resource") }),
            new Port(41, new List<Service> { new Service("graphics", "Graphics") }),
            new Port(42, new List<Service> { new Service("nameserver", "Host Name Server", "name") }),
            new Port(43, new List<Service> { new Service("nicname", "Who Is", "whois") }),
            new Port(44, new List<Service> { new Service("mpm-flags", "MPM FLAGS Protocol") }),
            new Port(45, new List<Service> { new Service("mpm", "Message Processing Module [recv]") }),
            new Port(46, new List<Service> { new Service("mpm-snd", "MPM [default send]") }),
            new Port(47, new List<Service> { new Service("ni-ftp", "NI FTP") }),
            new Port(48, new List<Service> { new Service("auditd", "Digital Audit Daemon") }),
            new Port(49, new List<Service> { new Service("tacacs", "Login Host Protocol", "login") }),
            new Port(50, new List<Service> { new Service("re-mail-ck", "Remote Mail Checking Protocol") }),
            new Port(51, new List<Service> { new Service("la-maint", "IMP Logical Address Maintenance") }),
            new Port(52, new List<Service> { new Service("xns-time", "XNS (Xerox Network Systems) Time Protocol") }),
            new Port(53, new List<Service> { new Service("domain", "Domain Name Server") }),
            new Port(54, new List<Service> { new Service("xns-ch", "XNS Clearinghouse") }),
            new Port(55, new List<Service> { new Service("isi-gl", "ISI Graphics Language") }),
            new Port(56, new List<Service> { new Service("xns-auth", "XNS Authentication") }),
            new Port(57, new List<Service> { new Service(String.Empty, "Mail Transfer Protocol (RFC 780)") }),
            new Port(58, new List<Service> { new Service("xns-mail", "XNS (Xerox Network Systems) Mail") }),
            new Port(59, new List<Service> { new Service(String.Empty, "Any private file service") }),
            new Port(61, new List<Service> { new Service("ni-mail", "NI MAIL") }),
            new Port(62, new List<Service> { new Service("acas", "ACA Services") }),
            new Port(63, new List<Service> { new Service("whoispp", alias: "whois++") }),
            new Port(64, new List<Service> { new Service("covia", "Communications Integrator (CI)") }),
            new Port(65, new List<Service> { new Service("tacacs-ds", "TACACS-Database Service") }),
            new Port(66, new List<Service> { new Service("sql-net", "Oracle SQL*NET", "sql*net") }),
            new Port(67, new List<Service> { new Service("bootps", "Bootstrap Protocol Server") }),
            new Port(68, new List<Service> { new Service("bootpc", "Bootstrap Protocol Client") }),
            new Port(69, new List<Service> { new Service("tftp", "Trivial File Transfer Protocol") }),
            new Port(70, new List<Service> { new Service("gopher", "Gopher") }),
            new Port(71, new List<Service> { new Service("netrjs-1", "Remote Job Service") }),
            new Port(72, new List<Service> { new Service("netrjs-2", "Remote Job Service") }),
            new Port(73, new List<Service> { new Service("netrjs-3", "Remote Job Service") }),
            new Port(74, new List<Service> { new Service("netrjs-4", "Remote Job Service") }),
            new Port(75, new List<Service> { new Service(String.Empty, "Any private dial out service") }),
            new Port(76, new List<Service> { new Service("deos", "Distributed External Object Store") }),
            new Port(77, new List<Service> { new Service("priv-rjs", "Any private RJE service") }),
            new Port(78, new List<Service> { new Service("vettcp") }),
            new Port(79, new List<Service> { new Service("finger", "Finger") }),
            new Port(80, new List<Service> { new Service("www", "World Wide Web HTTP", "http, www-http") }),
            new Port(81, new List<Service> { new Service("hosts2-ns", "HOSTS2 Name Server") }),
            new Port(82, new List<Service> { new Service("xfer", "XFER Utility") }),
            new Port(83, new List<Service> { new Service("mit-ml-dev", "MIT ML Device") }),
            new Port(84, new List<Service> { new Service("ctf", "Common Trace Facility") }),
            new Port(85, new List<Service> { new Service("mit-ml-dev", "MIT ML Device") }),
            new Port(86, new List<Service> { new Service("mfcobol", "Micro Focus Cobol") }),
            new Port(87, new List<Service> { new Service(String.Empty, "Any private terminal link") }),
            new Port(88, new List<Service> { new Service("kerberos", "Kerberos", "krb5") }),
            new Port(89, new List<Service> { new Service("su-mit-tg", "SU/MIT Telnet Gateway") }),
            new Port(90, new List<Service> { new Service("dnsix", "DNSIX Securit Attribute Token Map") }),
            new Port(91, new List<Service> { new Service("mit-dov", "MIT Dover Spooler") }),
            new Port(92, new List<Service> { new Service("npp", "Network Printing Protocol") }),
            new Port(93, new List<Service> { new Service("dcp", "Device Control Protocol") }),
            new Port(94, new List<Service> { new Service("objcall", "Tivoli Object Dispatcher") }),
            new Port(95, new List<Service> { new Service("supdup", "SUPDUP") }),
            new Port(96, new List<Service> { new Service("dixie", "DIXIE Protocol Specification") }),
            new Port(97, new List<Service> { new Service("swift-rvf", "Swift Remote Virtual File Protocol") }),
            new Port(98, new List<Service> { new Service("tacnews", "TAC News") }),
            new Port(99, new List<Service> { new Service("metagram", "Metagram Relay") }),
            new Port(100, new List<Service> { new Service("newacct", "[unauthorized use]") }),
            new Port(101, new List<Service> { new Service("hostname", "NIC Host Name Server", "hostnames") }),
            new Port(102, new List<Service> { new Service("iso-tsap", "ISO-TSAP (Transport Service Access Point) Class 0 protocol"), new Service(String.Empty, "Digital Equipment Corporation DECnet(Phase V+)") }),
            new Port(103, new List<Service> { new Service("gppitnp", "Genesis Point-to-Point Trans Net") }),
            new Port(104, new List<Service> { new Service("acr-name", "ACR-NEMA Digital Imag. & Comm. 300") }),
            new Port(105, new List<Service> { new Service("cso", "CCSO name server protocol (Qi/Ph)"), new Service("csnet-ns", "Mailbox Name Nameserver") }),
            new Port(106, new List<Service> { new Service("3com-tsmux", "3COM-TSMUX"), new Service("poppassd(epass)", "Password change with POP access") }),
            new Port(107, new List<Service> { new Service("rtelnet", "Remote Telnet Service") }),
            new Port(108, new List<Service> { new Service("snagas", "SNA Gateway Access Server") }),
            new Port(109, new List<Service> { new Service("pop2", "Post Office Protocol - Version 2", "postoffice") }),
            new Port(110, new List<Service> { new Service("pop3", "Post Office Protocol - Version 3", "postoffice") }),
            new Port(111, new List<Service> { new Service("sunrpc", "SUN Remote Procedure Call", "rpcbind portmap") }),
            new Port(112, new List<Service> { new Service("mcidas", "McIDAS Data Transmittion Protocol") }),
            new Port(113, new List<Service> { new Service("auth", "Authentication Service"), new Service("ident") }),
            new Port(114, new List<Service> { new Service("audionews", "Audio News Multicast") }),
            new Port(115, new List<Service> { new Service("sftp", "Simple File Transfer Protocol") }),
            new Port(116, new List<Service> { new Service("ansanotify", "ANSA REX Notify") }),
            new Port(117, new List<Service> { new Service("uucp-path", "UUCP Path Service") }),
            new Port(118, new List<Service> { new Service("sqlserv", "SQL Services") }),
            new Port(119, new List<Service> { new Service("nntp", "Network News Transfer Protocol", "usenet") }),
            new Port(120, new List<Service> { new Service("cfdptkt", "CFDPTKT") }),
            new Port(121, new List<Service> { new Service("erpc", "Encore Expedited Remote Pro.Call") }),
            new Port(122, new List<Service> { new Service("smakynet", "SMAKYNET") }),
            new Port(123, new List<Service> { new Service("ntp", "Network Time Protocol") }),
            new Port(124, new List<Service> { new Service("ansatrader", "ANSA REX Trader") }),
            new Port(125, new List<Service> { new Service("locus-map", "Locus PC-Interface Net Map Ser") }),
            new Port(126, new List<Service> { new Service("unitary", "Unisys Unitary Login"), new Service("nxedit", "NXEdit") }),
            new Port(127, new List<Service> { new Service("locus-con", "Locus PC-Interface Conn Server") }),
            new Port(128, new List<Service> { new Service("gss-xlicen", "GSS X License Verification") }),
            new Port(129, new List<Service> { new Service("pwdgen", "Password Generator Protocol") }),
            new Port(130, new List<Service> { new Service("cisco-fna", "cisco FNATIVE") }),
            new Port(131, new List<Service> { new Service("cisco-tna", "cisco TNATIVE") }),
            new Port(132, new List<Service> { new Service("cisco-sys", "cisco SYSMAINT") }),
            new Port(133, new List<Service> { new Service("statsrv", "Statistics Service") }),
            new Port(134, new List<Service> { new Service("ingres-net", "INGRES-NET Service") }),
            new Port(135, new List<Service> { new Service("epmap", "DCE endpoint resolution"), new Service("loc-srv", "NCS Location Service") }),
            new Port(136, new List<Service> { new Service("profile", "PROFILE Naming System") }),
            new Port(137, new List<Service> { new Service("netbios-ns", "NETBIOS Name Service", "nbname") }),
            new Port(138, new List<Service> { new Service("netbios-dgm", "NETBIOS Datagram Service", "nbdatagram") }),
            new Port(139, new List<Service> { new Service("netbios-ssn", "NETBIOS Session Service", "nbsession") }),
            new Port(140, new List<Service> { new Service("emfis-data", "EMFIS Data Service") }),
            new Port(141, new List<Service> { new Service("emfis-cntl", "EMFIS Control Service") }),
            new Port(142, new List<Service> { new Service("bl-idm", "Britton-Lee IDM") }),
            new Port(143, new List<Service> { new Service("imap", "Interim Mail Access Protocol v1"), new Service("imap2", "Interim Mail Access Protocol v2"), new Service("imap4", "Interim Mail Access Protocol v4") }),
            new Port(144, new List<Service> { new Service("news", "NewS") }),
            new Port(145, new List<Service> { new Service("uaac", "UAAC Protocol") }),
            new Port(146, new List<Service> { new Service("iso-tp0", "ISO-IP0") }),
            new Port(147, new List<Service> { new Service("iso-ip", "ISO-IP") }),
            new Port(148, new List<Service> { new Service("cronus", "CRONUS-SUPPORT") }),
            new Port(149, new List<Service> { new Service("aed-512", "AED Emulation Service") }),
            new Port(150, new List<Service> { new Service("sql-net", "SQL-NET") }),
            new Port(151, new List<Service> { new Service("hems", "HEMS") }),
            new Port(152, new List<Service> { new Service("bftp", "Background File Transfer Program") }),
            new Port(153, new List<Service> { new Service("sgmp", "SGMP") }),
            new Port(154, new List<Service> { new Service("netsc-prod", "NETSC") }),
            new Port(155, new List<Service> { new Service("netsc-dev", "NETSC") }),
            new Port(156, new List<Service> { new Service("sqlsrv", "SQL Service") }),
            new Port(157, new List<Service> { new Service("knet-cmp", "KNET/VM Command/Message Protocol") }),
            new Port(158, new List<Service> { new Service("pcmail-srv", "PC Mail Server", "repository") }),
            new Port(159, new List<Service> { new Service("nss-routing", "NSS-Routing") }),
            new Port(160, new List<Service> { new Service("sgmp-traps", "SGMP-TRAPS") }),
            new Port(161, new List<Service> { new Service("snmp", "SNMP") }),
            new Port(162, new List<Service> { new Service("snmptrap", "SNMP TRAP", "snmp-trap") }),
            new Port(163, new List<Service> { new Service("cmip-man", "CMIP/Protocols.TCP Manager") }),
            new Port(164, new List<Service> { new Service("cmip-agent", "CMIP/Protocols.TCP Agent") }),
            new Port(165, new List<Service> { new Service("xns-courier", "Xerox") }),
            new Port(166, new List<Service> { new Service("s-net", "Sirius Systems") }),
            new Port(167, new List<Service> { new Service("namp", "NAMP") }),
            new Port(168, new List<Service> { new Service("rsvd", "RSVD") }),
            new Port(169, new List<Service> { new Service("send", "SEND") }),
            new Port(170, new List<Service> { new Service("print-srv", "Network PostScript") }),
            new Port(171, new List<Service> { new Service("multiplex", "Network Innovations Multiplex") }),
            new Port(172, new List<Service> { new Service("cl/1", "Network Innovations CL/1") }),
            new Port(173, new List<Service> { new Service("xyplex-mux", "Xyplex") }),
            new Port(174, new List<Service> { new Service("mailq", "MAILQ") }),
            new Port(175, new List<Service> { new Service("vmnet", "VMNET") }),
            new Port(176, new List<Service> { new Service("genrad-mux", "GENRAD-MUX") }),
            new Port(177, new List<Service> { new Service("xdmcp", "X Display Manager Control Protocol") }),
            new Port(178, new List<Service> { new Service("NextStep", "NextStep Window Server") }),
            new Port(179, new List<Service> { new Service("bgp", "Border Gateway Protocol") }),
            new Port(180, new List<Service> { new Service("ris", "Intergraph") }),
            new Port(181, new List<Service> { new Service("unify", "Unify") }),
            new Port(182, new List<Service> { new Service("audit", "Unisys Audit SITP") }),
            new Port(183, new List<Service> { new Service("ocbinder", "OCBinder") }),
            new Port(184, new List<Service> { new Service("ocserver", "OCServer") }),
            new Port(185, new List<Service> { new Service("remote-kis", "Remote-KIS") }),
            new Port(186, new List<Service> { new Service("kis", "KIS Protocol") }),
            new Port(187, new List<Service> { new Service("aci", "Application Communication Interface") }),
            new Port(188, new List<Service> { new Service("mumps", "Plus Five's MUMPS") }),
            new Port(189, new List<Service> { new Service("qft", "Queued File Transport") }),
            new Port(190, new List<Service> { new Service("gacp", "Gateway Access Control Protocol") }),
            new Port(191, new List<Service> { new Service("prospero", "Prospero Directory Service") }),
            new Port(192, new List<Service> { new Service("osu-nms", "OSU Network Monitoring System") }),
            new Port(193, new List<Service> { new Service("srmp", "Spider Remote Monitoring Protocol") }),
            new Port(194, new List<Service> { new Service("irc", "Internet Relay Chat Protocol") }),
            new Port(195, new List<Service> { new Service("dn6-nlm-aud", "DNSIX Network Level Module Audit") }),
            new Port(196, new List<Service> { new Service("dn6-smm-red", "DNSIX Session Mgt Module Audit Redir") }),
            new Port(197, new List<Service> { new Service("dls", "Directory Location Service") }),
            new Port(198, new List<Service> { new Service("dls-mon", "Directory Location Service Monitor") }),
            new Port(199, new List<Service> { new Service("smux", "SMUX") }),
            new Port(200, new List<Service> { new Service("src", "IBM System Resource Controller") }),
            new Port(201, new List<Service> { new Service("at-rtmp", "AppleTalk Routing Maintenance") }),
            new Port(202, new List<Service> { new Service("at-nbp", "AppleTalk Name Binding") }),
            new Port(203, new List<Service> { new Service("at-3", "AppleTalk Unused") }),
            new Port(204, new List<Service> { new Service("at-echo", "AppleTalk Echo") }),
            new Port(205, new List<Service> { new Service("at-5", "AppleTalk Unused") }),
            new Port(206, new List<Service> { new Service("at-zis", "AppleTalk Zone Information") }),
            new Port(207, new List<Service> { new Service("at-7", "AppleTalk Unused") }),
            new Port(208, new List<Service> { new Service("at-8", "AppleTalk Unused") }),
            new Port(209, new List<Service> { new Service("tam", "Trivial Authenticated Mail Protocol") }),
            new Port(210, new List<Service> { new Service("z39.50", "ANSI Z39.50") }),
            new Port(211, new List<Service> { new Service("914c/g", "Texas Instruments 914C/G Terminal") }),
            new Port(212, new List<Service> { new Service("anet", "ATEXSSTR") }),
            new Port(213, new List<Service> { new Service("ipx", "IPX") }),
            new Port(214, new List<Service> { new Service("vmpwscs", "VM PWSCS") }),
            new Port(215, new List<Service> { new Service("softpc", "Insignia Solutions") }),
            new Port(216, new List<Service> { new Service("atls", "Access Technology License Server") }),
            new Port(217, new List<Service> { new Service("dbase", "dBASE Unix") }),
            new Port(218, new List<Service> { new Service("mpp", "Netix Message Posting Protocol") }),
            new Port(219, new List<Service> { new Service("uarps", "Unisys ARPs") }),
            new Port(220, new List<Service> { new Service("imap3", "Interactive Mail Access Protocol v3") }),
            new Port(221, new List<Service> { new Service("fln-spx", "Berkeley rlogind with SPX auth") }),
            new Port(222, new List<Service> { new Service("rsh-spx", "Berkeley rshd with SPX auth") }),
            new Port(223, new List<Service> { new Service("cdc", "Certificate Distribution Center") }),
            new Port(243, new List<Service> { new Service("sur-meas", "Survey Measurement") }),
            new Port(245, new List<Service> { new Service("link", "LINK") }),
            new Port(246, new List<Service> { new Service("dsp3270", "Display Systems Protocol") }),
            new Port(344, new List<Service> { new Service("pdap", "Prospero Data Access Protocol") }),
            new Port(345, new List<Service> { new Service("pawserv", "Perf Analysis Workbench") }),
            new Port(346, new List<Service> { new Service("zserv", "Zebra server") }),
            new Port(347, new List<Service> { new Service("fatserv", "Fatmen Server") }),
            new Port(348, new List<Service> { new Service("csi-sgwp", "Cabletron Management Protocol") }),
            new Port(371, new List<Service> { new Service("clearcase", "Clearcase") }),
            new Port(372, new List<Service> { new Service("ulistserv", "Unix Listserv") }),
            new Port(373, new List<Service> { new Service("legent-1", "Legent Corporation") }),
            new Port(374, new List<Service> { new Service("legent-2", "Legent Corporation") }),
            new Port(375, new List<Service> { new Service("hassle", "Hassle") }),
            new Port(376, new List<Service> { new Service("nip", "Amiga Envoy Network Inquiry Proto") }),
            new Port(377, new List<Service> { new Service("tnETOS", "NEC Corporation") }),
            new Port(378, new List<Service> { new Service("dsETOS", "NEC Corporation") }),
            new Port(379, new List<Service> { new Service("is99c", "TIA/EIA/IS-modem client") }),
            new Port(380, new List<Service> { new Service("is99s", "TIA/EIA/IS-modem server") }),
            new Port(381, new List<Service> { new Service("hp-collector", "hp performance data collector") }),
            new Port(382, new List<Service> { new Service("hp-managed-node", "hp performance data managed node") }),
            new Port(383, new List<Service> { new Service("hp-alarm-mgr", "hp performance data alarm manager") }),
            new Port(384, new List<Service> { new Service("arns", "A Remote Network Server System") }),
            new Port(385, new List<Service> { new Service("ibm-app", "IBM Application") }),
            new Port(385, new List<Service> { new Service("ibm-app", "IBM Application") }),
            new Port(386, new List<Service> { new Service("asa", "ASA Message Router Object Def.") }),
            new Port(387, new List<Service> { new Service("aurp", "Appletalk Update-Based Routing Pro.") }),
            new Port(388, new List<Service> { new Service("unidata-ldm", "Unidata LDM Version 4") }),
            new Port(389, new List<Service> { new Service("ldap", "Lightweight Directory Access Protocol") }),
            new Port(390, new List<Service> { new Service("uis", "UIS") }),
            new Port(391, new List<Service> { new Service("synotics-relay", "SynOptics SNMP Relay Port") }),
            new Port(392, new List<Service> { new Service("synotics-broker", "SynOptics Port Broker Port") }),
            new Port(393, new List<Service> { new Service("dis", "Data Interpretation System") }),
            new Port(394, new List<Service> { new Service("embl-ndt", "EMBL Nucleic Data Transfer") }),
            new Port(395, new List<Service> { new Service("netcp", "NETscout Control Protocol") }),
            new Port(396, new List<Service> { new Service("netware-ip", "Novell Netware over IP") }),
            new Port(397, new List<Service> { new Service("mptn", "Multi Protocol Trans. Net.") }),
            new Port(398, new List<Service> { new Service("kryptolan", "Kryptolan") }),
            new Port(400, new List<Service> { new Service("work-sol", "Workstation Solutions") }),
            new Port(401, new List<Service> { new Service("ups", "Uninterruptible Power Supply") }),
            new Port(402, new List<Service> { new Service("genie", "Genie Protocol") }),
            new Port(403, new List<Service> { new Service("decap") }),
            new Port(404, new List<Service> { new Service("nced") }),
            new Port(405, new List<Service> { new Service("ncld") }),
            new Port(406, new List<Service> { new Service("imsp", "Interactive Mail Support Protocol") }),
            new Port(407, new List<Service> { new Service("timbuktu", "Timbuktu") }),
            new Port(408, new List<Service> { new Service("prm-sm", "Prospero Resource Manager Sys. Man.") }),
            new Port(409, new List<Service> { new Service("prm-nm", "Prospero Resource Manager Node Man.") }),
            new Port(410, new List<Service> { new Service("decladebug", "DECLadebug Remote Debug Protocol") }),
            new Port(411, new List<Service> { new Service("rmt", "Remote MT Protocol") }),
            new Port(412, new List<Service> { new Service("synoptics-trap", "Trap Convention Port") }),
            new Port(413, new List<Service> { new Service("smsp", "SMSP") }),
            new Port(414, new List<Service> { new Service("infoseek", "InfoSeek") }),
            new Port(415, new List<Service> { new Service("bnet", "BNet") }),
            new Port(416, new List<Service> { new Service("silverplatter", "Silverplatter") }),
            new Port(417, new List<Service> { new Service("onmux", "Onmux") }),
            new Port(418, new List<Service> { new Service("hyper-g", "Hyper-G") }),
            new Port(419, new List<Service> { new Service("ariel1", "Ariel") }),
            new Port(420, new List<Service> { new Service("smpte", "SMPTE") }),
            new Port(421, new List<Service> { new Service("ariel2", "Ariel") }),
            new Port(422, new List<Service> { new Service("ariel3", "Ariel") }),
            new Port(423, new List<Service> { new Service("opc-job-start", "IBM Operations Planning and Control Start") }),
            new Port(424, new List<Service> { new Service("opc-job-track", "IBM Operations Planning and Control Track") }),
            new Port(425, new List<Service> { new Service("icad-el", "ICAD") }),
            new Port(426, new List<Service> { new Service("smartsdp") }),
            new Port(427, new List<Service> { new Service("svrloc", "Server Location") }),
            new Port(428, new List<Service> { new Service("ocs_cmu", "OCS_CMU") }),
            new Port(429, new List<Service> { new Service("ocs_amu", "OCS_AMU") }),
            new Port(430, new List<Service> { new Service("utmpsd", "UTMPSD") }),
            new Port(431, new List<Service> { new Service("utmpcd", "UTMPCD") }),
            new Port(432, new List<Service> { new Service("iasd", "IASD") }),
            new Port(433, new List<Service> { new Service("nnsp", "NNSP") }),
            new Port(434, new List<Service> { new Service("mobileip-agent", "MobileIP-Agent") }),
            new Port(435, new List<Service> { new Service("mobilip-mn", "MobilIP-MN") }),
            new Port(436, new List<Service> { new Service("dna-cml", "DNA-CML") }),
            new Port(437, new List<Service> { new Service("comscm", "comscm") }),
            new Port(438, new List<Service> { new Service("dsfgw", "dsfgw") }),
            new Port(439, new List<Service> { new Service("dasp", "dasp") }),
            new Port(440, new List<Service> { new Service("sgcp", "sgcp") }),
            new Port(441, new List<Service> { new Service("decvms-sysmgt", "decvms-sysmgt") }),
            new Port(442, new List<Service> { new Service("cvc_hostd", "cvc_hostd") }),
            new Port(443, new List<Service> { new Service("https", "https MCom") }),
            new Port(444, new List<Service> { new Service("snpp", "Simple Network Paging Protocol") }),
            new Port(445, new List<Service> { new Service("microsoft-ds", "Microsoft CIFS") }),
            new Port(446, new List<Service> { new Service("ddm-rdb", "DDM-RDB") }),
            new Port(447, new List<Service> { new Service("ddm-dfm", "DDM-RFM") }),
            new Port(448, new List<Service> { new Service("ddm-byte", "DDM-BYTE") }),
            new Port(449, new List<Service> { new Service("as-servermap", "AS Server Mapper") }),
            new Port(450, new List<Service> { new Service("tserver", "TServer") }),
            new Port(464, new List<Service> { new Service("kpasswd", "Kerberos (v5)") }),
            new Port(465, new List<Service> { new Service("urd", "URL Rendesvous Directory for SSM"), new Service("igmpv3lite", "UDP IGMP over UDP for SSM") }),
            new Port(500, new List<Service> { new Service("isakmp", "Internet Key Exchange (IPSec)", "ike") }),
            new Port(512, new List<Service> { new Service("exec", "Remote Process Execution") }),
            new Port(512, new List<Service> { new Service("biff", "Used by mail system to notify users", "comsat") }),
            new Port(513, new List<Service> { new Service("login", "Remote login a la telnet;") }),
            new Port(513, new List<Service> { new Service("who", "Database of who's logged on, average load", "whod") }),
            new Port(514, new List<Service> { new Service("cmd", "like exec, but automatic authentication") }),
            new Port(514, new List<Service> { new Service("syslog") }),
            new Port(515, new List<Service> { new Service("printer", "Listens for incoming connections", "spooler") }),
            new Port(517, new List<Service> { new Service("talk", "Establishes Protocols.TCP Connection - like tenex link") }),
            new Port(518, new List<Service> { new Service("ntalk") }),
            new Port(519, new List<Service> { new Service("utime", "unixtime") }),
            new Port(520, new List<Service> { new Service("efs", "Extended File Name Server") }),
            new Port(520, new List<Service> { new Service("router", "RIPv.1, RIPv.2, local routing process (on site)", "router routed") }),
            new Port(525, new List<Service> { new Service("timed", "Timeserver", "timeserver") }),
            new Port(526, new List<Service> { new Service("tempo", "Newdate", "newdate") }),
            new Port(530, new List<Service> { new Service("courier", "RPC", "rpc") }),
            new Port(531, new List<Service> { new Service("conference", "IRC Chat", "chat") }),
            new Port(532, new List<Service> { new Service("netnews", "Readnews", "readnews") }),
            new Port(533, new List<Service> { new Service("netwall", "For emergency broadcasts") }),
            new Port(539, new List<Service> { new Service("apertus-ldp", "Apertus Technologies Load Determination") }),
            new Port(540, new List<Service> { new Service("uucp", "Uucpd", "uucpd") }),
            new Port(541, new List<Service> { new Service("uucp-rlogin", "uucp-rlogin") }),
            new Port(543, new List<Service> { new Service("klogin", "Kerberos login") }),
            new Port(544, new List<Service> { new Service("kshell", "Kerberos remote shell", "krcmd") }),
            new Port(550, new List<Service> { new Service("new-rwho", "New-who", "new-who") }),
            new Port(555, new List<Service> { new Service("dsf") }),
            new Port(556, new List<Service> { new Service("remotefs", "rfs server", "rfs rfs_server") }),
            new Port(560, new List<Service> { new Service("rmonitor", "Rmonitor", "rmonitord") }),
            new Port(561, new List<Service> { new Service("monitor") }),
            new Port(562, new List<Service> { new Service("chshell", "chcmd") }),
            new Port(564, new List<Service> { new Service("9pfs", "plan 9 file service") }),
            new Port(565, new List<Service> { new Service("whoami") }),
            new Port(570, new List<Service> { new Service("meter", "demon") }),
            new Port(571, new List<Service> { new Service("meter", "udemon") }),
            new Port(600, new List<Service> { new Service("ipcserver", "Sun IPC server") }),
            new Port(607, new List<Service> { new Service("nqs") }),
            new Port(606, new List<Service> { new Service("urm", "Cray Unified Resource Manager") }),
            new Port(608, new List<Service> { new Service("sift-uft", "Sender-Initiated/Unsolicited File Transfer") }),
            new Port(609, new List<Service> { new Service("npmp-trap") }),
            new Port(610, new List<Service> { new Service("npmp-local") }),
            new Port(611, new List<Service> { new Service("npmp-gui") }),
            new Port(634, new List<Service> { new Service("ginad") }),
            new Port(636, new List<Service> { new Service("ldaps", "LDAP over TLS/SSL", "sldap") }),
            new Port(666, new List<Service> { new Service("mdqs"), new Service("doom", "doom Id Software") }),
            new Port(704, new List<Service> { new Service("elcsd", "errlog copy/server daemon") }),
            new Port(709, new List<Service> { new Service("entrustmanager", "EntrustManager") }),
            new Port(729, new List<Service> { new Service("netviewdm1", "IBM NetView DM/6Server/Client") }),
            new Port(730, new List<Service> { new Service("netviewdm2", "IBM NetView DM/6send/tcp") }),
            new Port(731, new List<Service> { new Service("netviewdm3", "IBM NetView DM/6receive/tcp") }),
            new Port(741, new List<Service> { new Service("netgw", "netGW") }),
            new Port(742, new List<Service> { new Service("netrcs", "Network based Rev. Cont. Sys.") }),
            new Port(744, new List<Service> { new Service("flexlm", "Flexible License Manager") }),
            new Port(747, new List<Service> { new Service("fujitsu-dev", "Fujitsu Device Control") }),
            new Port(748, new List<Service> { new Service("ris-cm", "Russell Info Sci Calendar Manager") }),
            new Port(749, new List<Service> { new Service("kerberos-adm", "Kerberos Administration") }),
            new Port(750, new List<Service> { new Service("rfile") }),
            new Port(750, new List<Service> { new Service("loadav") }),
            new Port(751, new List<Service> { new Service("pump") }),
            new Port(752, new List<Service> { new Service("qrh") }),
            new Port(753, new List<Service> { new Service("rrh") }),
            new Port(754, new List<Service> { new Service("tell", "send") }),
            new Port(758, new List<Service> { new Service("nlogin") }),
            new Port(759, new List<Service> { new Service("con") }),
            new Port(760, new List<Service> { new Service("ns") }),
            new Port(761, new List<Service> { new Service("rxe") }),
            new Port(762, new List<Service> { new Service("quotad") }),
            new Port(763, new List<Service> { new Service("cycleserv") }),
            new Port(764, new List<Service> { new Service("omserv") }),
            new Port(765, new List<Service> { new Service("webster") }),
            new Port(767, new List<Service> { new Service("phonebook", "phone") }),
            new Port(769, new List<Service> { new Service("vid") }),
            new Port(770, new List<Service> { new Service("cadlock") }),
            new Port(771, new List<Service> { new Service("rtip") }),
            new Port(772, new List<Service> { new Service("cycleserv2") }),
            new Port(773, new List<Service> { new Service("submit") }),
            new Port(773, new List<Service> { new Service("notify") }),
            new Port(774, new List<Service> { new Service("rpasswd") }),
            new Port(774, new List<Service> { new Service("acmaint_dbd") }),
            new Port(775, new List<Service> { new Service("entomb") }),
            new Port(775, new List<Service> { new Service("acmaint_transd") }),
            new Port(776, new List<Service> { new Service("wpages") }),
            new Port(780, new List<Service> { new Service("wpgs") }),
            new Port(786, new List<Service> { new Service("concert", "Concert") }),
            new Port(800, new List<Service> { new Service("mdbs_daemon") }),
            new Port(801, new List<Service> { new Service("device") }),
            new Port(996, new List<Service> { new Service("xtreelic", "Central Point Software") }),
            new Port(997, new List<Service> { new Service("maitrd") }),
            new Port(998, new List<Service> { new Service("busboy") }),
            new Port(998, new List<Service> { new Service("puparp") }),
            new Port(999, new List<Service> { new Service("garcon") }),
            new Port(999, new List<Service> { new Service("applix", "Applix ac") }),
            new Port(999, new List<Service> { new Service("puprouter") }),
            new Port(1000, new List<Service> { new Service("cadlock") }),
            new Port(1000, new List<Service> { new Service("ock") }),
            new Port(1025, new List<Service> { new Service("blackjack", "network blackjack") }),
            new Port(1030, new List<Service> { new Service("iad1", "BBN IAD") }),
            new Port(1031, new List<Service> { new Service("iad2", "BBN IAD") }),
            new Port(1032, new List<Service> { new Service("iad3", "BBN IAD") }),
            new Port(1067, new List<Service> { new Service("instl_boots", "Installation Bootstrap Proto. Serv.") }),
            new Port(1068, new List<Service> { new Service("instl_bootc", "Installation Bootstrap Proto. Cli.") }),
            new Port(1080, new List<Service> { new Service("socks", "Socks") }),
            new Port(1083, new List<Service> { new Service("ansoft-lm-1", "Anasoft License Manager") }),
            new Port(1084, new List<Service> { new Service("ansoft-lm-2", "Anasoft License Manager") }),
            new Port(1155, new List<Service> { new Service("nfa", "Network File Access") }),
            new Port(1222, new List<Service> { new Service("nerv", "SNI R&D network") }),
            new Port(1248, new List<Service> { new Service("hermes") }),
            new Port(1346, new List<Service> { new Service("alta-ana-lm", "Alta Analytics License Manager") }),
            new Port(1347, new List<Service> { new Service("bbn-mmc", "multi media conferencing") }),
            new Port(1348, new List<Service> { new Service("bbn-mmx", "multi media conferencing") }),
            new Port(1349, new List<Service> { new Service("sbook", "Registration Network Protocol") }),
            new Port(1350, new List<Service> { new Service("editbench", "Registration Network Protocol") }),
            new Port(1351, new List<Service> { new Service("equationbuilder", "Digital Tool Works (MIT)") }),
            new Port(1352, new List<Service> { new Service("lotusnote", "Lotus Note") }),
            new Port(1353, new List<Service> { new Service("relief", "Relief Consulting") }),
            new Port(1354, new List<Service> { new Service("rightbrain", "RightBrain Software") }),
            new Port(1355, new List<Service> { new Service("intuitive edge", "Intuitive Edge") }),
            new Port(1356, new List<Service> { new Service("cuillamartin", "CuillaMartin Company") }),
            new Port(1357, new List<Service> { new Service("pegboard", "Electronic PegBoard") }),
            new Port(1358, new List<Service> { new Service("connlcli", "CONNLCLI") }),
            new Port(1359, new List<Service> { new Service("ftsrv", "FTSRV") }),
            new Port(1360, new List<Service> { new Service("mimer", "MIMER") }),
            new Port(1361, new List<Service> { new Service("linx", "LinX") }),
            new Port(1362, new List<Service> { new Service("timeflies", "TimeFlies") }),
            new Port(1363, new List<Service> { new Service("ndm-requester", "Network DataMover Requester") }),
            new Port(1364, new List<Service> { new Service("ndm-server", "Network DataMover Server") }),
            new Port(1365, new List<Service> { new Service("adapt-sna", "Network Software Associates") }),
            new Port(1366, new List<Service> { new Service("netware-csp", "Novell NetWare Comm Service Platform") }),
            new Port(1367, new List<Service> { new Service("dcs", "DCS") }),
            new Port(1368, new List<Service> { new Service("screencast", "ScreenCast") }),
            new Port(1369, new List<Service> { new Service("gv-us", "GlobalView to Unix Shell") }),
            new Port(1370, new List<Service> { new Service("us-gv", "Unix Shell to GlobalView") }),
            new Port(1371, new List<Service> { new Service("fc-cli", "Fujitsu Config Protocol") }),
            new Port(1372, new List<Service> { new Service("fc-ser", "Fujitsu Config Protocol") }),
            new Port(1373, new List<Service> { new Service("chromagrafx", "Chromagrafx") }),
            new Port(1374, new List<Service> { new Service("molly", "EPI Software Systems") }),
            new Port(1375, new List<Service> { new Service("bytex", "Bytex") }),
            new Port(1376, new List<Service> { new Service("ibm-pps", "IBM Person to Person Software") }),
            new Port(1377, new List<Service> { new Service("cichlid", "Cichlid License Manager") }),
            new Port(1378, new List<Service> { new Service("elan", "Elan License Manager") }),
            new Port(1379, new List<Service> { new Service("dbreporter", "Integrity Solutions") }),
            new Port(1380, new List<Service> { new Service("telesis-licman", "Telesis Network License Manager") }),
            new Port(1381, new List<Service> { new Service("apple-licman", "Apple Network License Manager") }),
            new Port(1382, new List<Service> { new Service("udt_os") }),
            new Port(1383, new List<Service> { new Service("gwha", "GW Hannaway Network License Manager") }),
            new Port(1384, new List<Service> { new Service("os-licman", "Objective Solutions License Manager") }),
            new Port(1385, new List<Service> { new Service("atex_elmd", "Atex Publishing License Manager") }),
            new Port(1386, new List<Service> { new Service("checksum", "CheckSum License Manager") }),
            new Port(1387, new List<Service> { new Service("cadsi-lm", "Computer Aided Design Software Inc LM") }),
            new Port(1388, new List<Service> { new Service("objective-dbc", "Objective Solutions DataBase Cache") }),
            new Port(1389, new List<Service> { new Service("iclpv-dm", "Document Manager") }),
            new Port(1390, new List<Service> { new Service("iclpv-sc", "Storage Controller") }),
            new Port(1391, new List<Service> { new Service("iclpv-sas", "Storage Access Server") }),
            new Port(1392, new List<Service> { new Service("iclpv-pm", "Print Manager") }),
            new Port(1393, new List<Service> { new Service("iclpv-nls", "Network Log Server") }),
            new Port(1394, new List<Service> { new Service("iclpv-nlc", "Network Log Client") }),
            new Port(1395, new List<Service> { new Service("iclpv-wsm", "PC Workstation Manager software") }),
            new Port(1396, new List<Service> { new Service("dvl-activemail", "DVL Active Mail") }),
            new Port(1397, new List<Service> { new Service("audio-activmail", "Audio Active Mail") }),
            new Port(1398, new List<Service> { new Service("video-activmail", "Video Active Mail") }),
            new Port(1399, new List<Service> { new Service("cadkey-licman", "Cadkey License Manager") }),
            new Port(1400, new List<Service> { new Service("cadkey-tablet", "Cadkey Tablet Daemon") }),
            new Port(1401, new List<Service> { new Service("goldleaf-licman", "Goldleaf License Manager") }),
            new Port(1402, new List<Service> { new Service("prm-sm-np", "Prospero Resource Manager") }),
            new Port(1403, new List<Service> { new Service("prm-nm-np", "Prospero Resource Manager") }),
            new Port(1404, new List<Service> { new Service("igi-lm", "Infinite Graphics License Manager") }),
            new Port(1405, new List<Service> { new Service("ibm-res", "IBM Remote Execution Starter") }),
            new Port(1406, new List<Service> { new Service("netlabs-lm", "NetLabs License Manager") }),
            new Port(1407, new List<Service> { new Service("dbsa-lm", "DBSA License Manager") }),
            new Port(1408, new List<Service> { new Service("sophia-lm", "Sophia License Manager") }),
            new Port(1409, new List<Service> { new Service("here-lm", "Here License Manager") }),
            new Port(1410, new List<Service> { new Service("hiq", "HiQ License Manager") }),
            new Port(1411, new List<Service> { new Service("af", "AudioFile"), new Service("RemoteVideoServer", "Sziltech Remote Video Server") }),
            new Port(1412, new List<Service> { new Service("innosys", "InnoSys") }),
            new Port(1413, new List<Service> { new Service("innosys-acl", "Innosys-ACL") }),
            new Port(1414, new List<Service> { new Service("ibm-mqseries", "IBM MQSeries") }),
            new Port(1415, new List<Service> { new Service("dbstar", "DBStar") }),
            new Port(1416, new List<Service> { new Service("novell-lu6.2", "Novell LU6.2") }),
            new Port(1417, new List<Service> { new Service("timbuktu-srv1", "Timbuktu Service 1 Port") }),
            new Port(1418, new List<Service> { new Service("timbuktu-srv2", "Timbuktu Service 2 Port") }),
            new Port(1419, new List<Service> { new Service("timbuktu-srv3", "Timbuktu Service 3 Port") }),
            new Port(1420, new List<Service> { new Service("timbuktu-srv4", "Timbuktu Service 4 Port") }),
            new Port(1421, new List<Service> { new Service("gandalf-lm", "Gandalf License Manager") }),
            new Port(1422, new List<Service> { new Service("autodesk-lm", "Autodesk License Manager") }),
            new Port(1423, new List<Service> { new Service("essbase", "Essbase Arbor Software") }),
            new Port(1424, new List<Service> { new Service("hybrid", "Hybrid Encryption Protocol") }),
            new Port(1425, new List<Service> { new Service("zion-lm", "Zion Software License Manager") }),
            new Port(1426, new List<Service> { new Service("sas-1", "Satellite-data Acquisition System 1") }),
            new Port(1427, new List<Service> { new Service("mloadd", "mloadd monitoring tool") }),
            new Port(1428, new List<Service> { new Service("informatik-lm", "Informatik License Manager") }),
            new Port(1429, new List<Service> { new Service("nms", "Hypercom NMS") }),
            new Port(1430, new List<Service> { new Service("tpdu", "Hypercom TPDU") }),
            new Port(1431, new List<Service> { new Service("rgtp", "Reverse Gosip Transport") }),
            new Port(1432, new List<Service> { new Service("blueberry-lm", "Blueberry Software License Manager") }),
            new Port(1433, new List<Service> { new Service("ms-sql-s", "Microsoft-SQL-Server") }),
            new Port(1434, new List<Service> { new Service("ms-sql-m", "Microsoft-SQL-Monitor") }),
            new Port(1435, new List<Service> { new Service("ibm-cics", "IBM CISC") }),
            new Port(1436, new List<Service> { new Service("sas-2", "Satellite-data Acquisition System 2") }),
            new Port(1437, new List<Service> { new Service("tabula", "Tabula") }),
            new Port(1438, new List<Service> { new Service("eicon-server", "Eicon Security Agent/Server") }),
            new Port(1439, new List<Service> { new Service("eicon-x25", "Eicon X25/SNA Gateway") }),
            new Port(1440, new List<Service> { new Service("eicon-slp", "Eicon Service Location Protocol") }),
            new Port(1441, new List<Service> { new Service("cadis-1", "Cadis License Management") }),
            new Port(1442, new List<Service> { new Service("cadis-2", "Cadis License Management") }),
            new Port(1443, new List<Service> { new Service("ies-lm", "Integrated Engineering Software") }),
            new Port(1444, new List<Service> { new Service("marcam-lm", "Marcam  License Management") }),
            new Port(1445, new List<Service> { new Service("proxima-lm", "Proxima License Manager") }),
            new Port(1446, new List<Service> { new Service("ora-lm", "Optical Research Associates License Manager") }),
            new Port(1447, new List<Service> { new Service("apri-lm", "Applied Parallel Research LM") }),
            new Port(1448, new List<Service> { new Service("oc-lm", "OpenConnect License Manager") }),
            new Port(1449, new List<Service> { new Service("peport", "PEport") }),
            new Port(1450, new List<Service> { new Service("dwf", "Tandem Distributed Workbench Facility") }),
            new Port(1451, new List<Service> { new Service("infoman", "IBM Information Management") }),
            new Port(1452, new List<Service> { new Service("gtegsc-lm", "GTE Government Systems License Man") }),
            new Port(1453, new List<Service> { new Service("genie-lm", "Genie License Manager") }),
            new Port(1454, new List<Service> { new Service("interhdl_elmd", "interHDL License Manager") }),
            new Port(1455, new List<Service> { new Service("esl-lm", "ESL License Manager") }),
            new Port(1456, new List<Service> { new Service("dca", "DCA") }),
            new Port(1457, new List<Service> { new Service("valisys-lm", "Valisys License Manager") }),
            new Port(1458, new List<Service> { new Service("nrcabq-lm", "Nichols Research Corp.") }),
            new Port(1459, new List<Service> { new Service("proshare1", "Proshare Notebook Application") }),
            new Port(1460, new List<Service> { new Service("proshare2", "Proshare Notebook Application") }),
            new Port(1461, new List<Service> { new Service("ibm_wrless_lan", "IBM Wireless LAN") }),
            new Port(1462, new List<Service> { new Service("world-lm", "World License Manager") }),
            new Port(1463, new List<Service> { new Service("nucleus", "Nucleus") }),
            new Port(1464, new List<Service> { new Service("msl_lmd", "MSL License Manager") }),
            new Port(1465, new List<Service> { new Service("pipes", "Pipes Platform") }),
            new Port(1466, new List<Service> { new Service("oceansoft-lm", "Ocean Software License Manager") }),
            new Port(1467, new List<Service> { new Service("csdmbase", "CSDMBASE") }),
            new Port(1468, new List<Service> { new Service("csdm", "CSDM") }),
            new Port(1469, new List<Service> { new Service("aal-lm", "Active Analysis Limited License Manager") }),
            new Port(1470, new List<Service> { new Service("uaiact", "Universal Analytics") }),
            new Port(1471, new List<Service> { new Service("csdmbase", "csdmbase") }),
            new Port(1472, new List<Service> { new Service("csdm") }),
            new Port(1473, new List<Service> { new Service("openmath", "OpenMath") }),
            new Port(1474, new List<Service> { new Service("telefinder", "Telefinder") }),
            new Port(1475, new List<Service> { new Service("taligent-lm", "Taligent License Manager") }),
            new Port(1476, new List<Service> { new Service("clvm-cfg") }),
            new Port(1477, new List<Service> { new Service("ms-sna-server") }),
            new Port(1478, new List<Service> { new Service("ms-sna-base") }),
            new Port(1479, new List<Service> { new Service("dberegister") }),
            new Port(1480, new List<Service> { new Service("pacerforum", "PacerForum") }),
            new Port(1481, new List<Service> { new Service("airs", "AIRS") }),
            new Port(1482, new List<Service> { new Service("miteksys-lm", "Miteksys License Manager") }),
            new Port(1483, new List<Service> { new Service("afs", "AFS License Manager") }),
            new Port(1484, new List<Service> { new Service("confluent", "Confluent License Manager") }),
            new Port(1485, new List<Service> { new Service("lansource", "LANSource") }),
            new Port(1486, new List<Service> { new Service("nms_topo_serv") }),
            new Port(1487, new List<Service> { new Service("localinfosrvr", "LocalInfoSrvr") }),
            new Port(1488, new List<Service> { new Service("docstor", "DocStor") }),
            new Port(1489, new List<Service> { new Service("dmdocbroker") }),
            new Port(1490, new List<Service> { new Service("insitu-conf") }),
            new Port(1491, new List<Service> { new Service("anynetgateway") }),
            new Port(1492, new List<Service> { new Service("stone-design-1") }),
            new Port(1493, new List<Service> { new Service("netmap_lm") }),
            new Port(1494, new List<Service> { new Service("ica") }),
            new Port(1495, new List<Service> { new Service("cvc") }),
            new Port(1496, new List<Service> { new Service("liberty-lm") }),
            new Port(1497, new List<Service> { new Service("rfx-lm") }),
            new Port(1498, new List<Service> { new Service("watcom-sql", "Watcom-SQL") }),
            new Port(1499, new List<Service> { new Service("fhc", "Federico Heinz Consultora") }),
            new Port(1500, new List<Service> { new Service("vlsi-lm", "VLSI License Manager, RemoteVideoServer", "RemoteVideoServer: Overflow on connect") }),
            new Port(1501, new List<Service> { new Service("sas-3", "Satellite-data Acquisition System 3") }),
            new Port(1502, new List<Service> { new Service("shivadiscovery", "Shiva") }),
            new Port(1503, new List<Service> { new Service("imtc-mcs", "Databeam") }),
            new Port(1504, new List<Service> { new Service("evb-elm", "EVB Software Engineering License Manager") }),
            new Port(1505, new List<Service> { new Service("funkproxy", "Funk Software, Inc.") }),
            new Port(1513, new List<Service> { new Service("fujitsu-dtc") }),
            new Port(1514, new List<Service> { new Service("fujitsu-dtcns") }),
            new Port(1524, new List<Service> { new Service("ingreslock", "ingres") }),
            new Port(1525, new List<Service> { new Service("orasrv"), new Service("oracle") }),
            new Port(1525, new List<Service> { new Service("prospero-np", "Prospero Directory Service non-priv") }),
            new Port(1526, new List<Service> { new Service("pdap-np", "Prospero Data Access Prot non-priv") }),
            new Port(1527, new List<Service> { new Service("tlisrv"), new Service("oracle") }),
            new Port(1529, new List<Service> { new Service("coauthor"), new Service("oracle") }),
            new Port(1600, new List<Service> { new Service("issd") }),
            new Port(1650, new List<Service> { new Service("nkd") }),
            new Port(1651, new List<Service> { new Service("proshareaudio", "proshare conf audio") }),
            new Port(1652, new List<Service> { new Service("prosharevideo", "proshare conf video") }),
            new Port(1653, new List<Service> { new Service("prosharedata", "proshare conf data") }),
            new Port(1654, new List<Service> { new Service("prosharerequest", "proshare conf request") }),
            new Port(1655, new List<Service> { new Service("prosharenotify", "proshare conf notify") }),
            new Port(1661, new List<Service> { new Service("netview-aix-1") }),
            new Port(1662, new List<Service> { new Service("netview-aix-2") }),
            new Port(1663, new List<Service> { new Service("netview-aix-3") }),
            new Port(1664, new List<Service> { new Service("netview-aix-4") }),
            new Port(1665, new List<Service> { new Service("netview-aix-5") }),
            new Port(1666, new List<Service> { new Service("netview-aix-6") }),
            new Port(1986, new List<Service> { new Service("licensedaemon", "cisco license management") }),
            new Port(1987, new List<Service> { new Service("tr-rsrb-p1", "cisco RSRB Priority 1 port") }),
            new Port(1988, new List<Service> { new Service("tr-rsrb-p2", "cisco RSRB Priority 2 port") }),
            new Port(1989, new List<Service> { new Service("tr-rsrb-p3", "cisco RSRB Priority 3 port") }),
            new Port(1989, new List<Service> { new Service("mshnet", "MHSnet system") }),
            new Port(1990, new List<Service> { new Service("stun-p1", "cisco STUN Priority 1 port") }),
            new Port(1991, new List<Service> { new Service("stun-p2", "cisco STUN Priority 2 port") }),
            new Port(1992, new List<Service> { new Service("stun-p3", "cisco STUN Priority 3 port") }),
            new Port(1992, new List<Service> { new Service("ipsendmsg", "IPsendmsg") }),
            new Port(1993, new List<Service> { new Service("snmp-tcp-port", "cisco SNMP Protocols.TCP port") }),
            new Port(1994, new List<Service> { new Service("stun-port", "cisco serial tunnel port") }),
            new Port(1995, new List<Service> { new Service("perf-port", "cisco perf port") }),
            new Port(1996, new List<Service> { new Service("tr-rsrb-port", "cisco Remote SRB port") }),
            new Port(1997, new List<Service> { new Service("gdp-port", "cisco Gateway Discovery Protocol") }),
            new Port(1998, new List<Service> { new Service("x25-svc-port", "cisco X.service (XOT)") }),
            new Port(1999, new List<Service> { new Service("tcp-id-port", "cisco identification port") }),
            new Port(2000, new List<Service> { new Service("callbook") }),
            new Port(2001, new List<Service> { new Service("dc") }),
            new Port(2001, new List<Service> { new Service("wizard"), new Service("curry") }),
            new Port(2002, new List<Service> { new Service("globe") }),
            new Port(2004, new List<Service> { new Service("mailbox") }),
            new Port(2004, new List<Service> { new Service("emce", "CCWS mm conf") }),
            new Port(2005, new List<Service> { new Service("berknet") }),
            new Port(2005, new List<Service> { new Service("oracle") }),
            new Port(2006, new List<Service> { new Service("invokator") }),
            new Port(2006, new List<Service> { new Service("raid-cc", alias: "raid") }),
            new Port(2007, new List<Service> { new Service("dectalk") }),
            new Port(2007, new List<Service> { new Service("raid-am") }),
            new Port(2008, new List<Service> { new Service("conf") }),
            new Port(2008, new List<Service> { new Service("terminaldb") }),
            new Port(2009, new List<Service> { new Service("news") }),
            new Port(2009, new List<Service> { new Service("whosockami") }),
            new Port(2010, new List<Service> { new Service("search") }),
            new Port(2010, new List<Service> { new Service("pipe_server") }),
            new Port(2011, new List<Service> { new Service("raid-cc", alias: "raid") }),
            new Port(2011, new List<Service> { new Service("servserv") }),
            new Port(2012, new List<Service> { new Service("ttyinfo") }),
            new Port(2012, new List<Service> { new Service("raid-ac") }),
            new Port(2013, new List<Service> { new Service("raid-am") }),
            new Port(2013, new List<Service> { new Service("raid-cd") }),
            new Port(2014, new List<Service> { new Service("troff") }),
            new Port(2014, new List<Service> { new Service("raid-sf") }),
            new Port(2015, new List<Service> { new Service("cypress") }),
            new Port(2015, new List<Service> { new Service("raid-cs") }),
            new Port(2016, new List<Service> { new Service("bootserver") }),
            new Port(2017, new List<Service> { new Service("cypress-stat") }),
            new Port(2017, new List<Service> { new Service("bootclient") }),
            new Port(2018, new List<Service> { new Service("terminaldb") }),
            new Port(2018, new List<Service> { new Service("rellpack") }),
            new Port(2019, new List<Service> { new Service("whosockami") }),
            new Port(2019, new List<Service> { new Service("about") }),
            new Port(2020, new List<Service> { new Service("xinupageserver") }),
            new Port(2021, new List<Service> { new Service("servexec") }),
            new Port(2021, new List<Service> { new Service("xinuexpansion1") }),
            new Port(2022, new List<Service> { new Service("down") }),
            new Port(2022, new List<Service> { new Service("xinuexpansion2") }),
            new Port(2023, new List<Service> { new Service("xinuexpansion3") }),
            new Port(2024, new List<Service> { new Service("xinuexpansion4") }),
            new Port(2025, new List<Service> { new Service("ellpack") }),
            new Port(2025, new List<Service> { new Service("xribs") }),
            new Port(2026, new List<Service> { new Service("scrabble") }),
            new Port(2027, new List<Service> { new Service("shadowserver") }),
            new Port(2028, new List<Service> { new Service("submitserver") }),
            new Port(2030, new List<Service> { new Service("device2") }),
            new Port(2032, new List<Service> { new Service("blackboard") }),
            new Port(2033, new List<Service> { new Service("glogger") }),
            new Port(2034, new List<Service> { new Service("scoremgr") }),
            new Port(2035, new List<Service> { new Service("imsldoc") }),
            new Port(2038, new List<Service> { new Service("objectmanager") }),
            new Port(2040, new List<Service> { new Service("lam") }),
            new Port(2041, new List<Service> { new Service("interbase") }),
            new Port(2042, new List<Service> { new Service("isis") }),
            new Port(2043, new List<Service> { new Service("isis-bcast") }),
            new Port(2044, new List<Service> { new Service("rimsl") }),
            new Port(2045, new List<Service> { new Service("cdfunc") }),
            new Port(2046, new List<Service> { new Service("sdfunc") }),
            new Port(2047, new List<Service> { new Service("dls") }),
            new Port(2048, new List<Service> { new Service("dls-monitor") }),
            new Port(2049, new List<Service> { new Service("shilp") }),
            new Port(2065, new List<Service> { new Service("dlsrpn", "Data Link Switch Read Port Number") }),
            new Port(2067, new List<Service> { new Service("dlswpn", "Data Link Switch Write Port Number") }),
            new Port(2201, new List<Service> { new Service("ats", "Advanced Training System Program") }),
            new Port(2500, new List<Service> { new Service("rtsserv", "Resource Tracking system server") }),
            new Port(2501, new List<Service> { new Service("rtsclient", "Resource Tracking system client") }),
            new Port(2564, new List<Service> { new Service("hp-3000-telnet", "HP 3NS/VT block mode telnet") }),
            new Port(2784, new List<Service> { new Service("www-dev", "world wide web - development") }),
            new Port(3049, new List<Service> { new Service("NSWS") }),
            new Port(3264, new List<Service> { new Service("ccmail", "cc:mail/lotus") }),
            new Port(3333, new List<Service> { new Service("dec-notes", "DEC Notes") }),
            new Port(3984, new List<Service> { new Service("mapper-nodemgr", "MAPPER network node manager") }),
            new Port(3985, new List<Service> { new Service("mapper-mapethd", "MAPPER Protocols.TCP/IP server") }),
            new Port(3986, new List<Service> { new Service("mapper-ws_ethd", "MAPPER workstation server") }),
            new Port(3421, new List<Service> { new Service("bmap", "Bull Apprise portmapper") }),
            new Port(3900, new List<Service> { new Service("udt_os", "Unidata UDT OS") }),
            new Port(4132, new List<Service> { new Service("nuts_dem", "NUTS Daemon") }),
            new Port(4133, new List<Service> { new Service("nuts_bootp", "NUTS Bootp Server") }),
            new Port(4343, new List<Service> { new Service("unicall", "UNICALL") }),
            new Port(4444, new List<Service> { new Service("krb524", "KRB524") }),
            new Port(4672, new List<Service> { new Service("rfa", "remote file access server") }),
            new Port(5000, new List<Service> { new Service("commplex-main") }),
            new Port(5001, new List<Service> { new Service("commplex-link") }),
            new Port(5002, new List<Service> { new Service("rfe", "radio free ethernet") }),
            new Port(5010, new List<Service> { new Service("telelpathstart", "TelepathStart") }),
            new Port(5011, new List<Service> { new Service("telelpathattack", "TelepathAttack") }),
            new Port(5050, new List<Service> { new Service("mmcc", "multimedia conference control tool") }),
            new Port(5145, new List<Service> { new Service("rmonitor_secure") }),
            new Port(5190, new List<Service> { new Service("aol", "America-Online") }),
            new Port(5236, new List<Service> { new Service("padl2sim") }),
            new Port(5300, new List<Service> { new Service("hacl-hb", "# HA cluster heartbeat") }),
            new Port(5301, new List<Service> { new Service("hacl-gs", "# HA cluster general services") }),
            new Port(5302, new List<Service> { new Service("hacl-cfg", "# HA cluster configuration") }),
            new Port(5303, new List<Service> { new Service("hacl-probe", "# HA cluster probing") }),
            new Port(5304, new List<Service> { new Service("hacl-local") }),
            new Port(5305, new List<Service> { new Service("hacl-test") }),
            new Port(6000, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6001, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6002, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6003, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6004, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6005, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6006, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6007, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6008, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6009, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6010, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6011, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6012, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6013, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6014, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6015, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6016, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6017, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6018, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6019, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6020, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6021, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6022, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6023, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6024, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6025, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6026, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6027, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6028, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6029, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6030, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6031, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6032, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6033, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6034, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6035, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6036, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6037, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6038, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6039, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6040, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6041, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6042, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6043, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6044, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6045, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6046, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6047, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6048, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6049, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6050, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6051, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6052, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6053, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6054, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6055, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6056, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6057, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6058, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6059, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6060, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6061, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6062, new List<Service> { new Service("x11", "X Window System") }),
            new Port(6111, new List<Service> { new Service("sub-process", "HP SoftBench Sub-Process Control") }),
            new Port(6141, new List<Service> { new Service("meta-corp", "Meta Corporation License Manager") }),
            new Port(6142, new List<Service> { new Service("aspentec-lm", "Aspen Technology License Manager") }),
            new Port(6143, new List<Service> { new Service("watershed-lm", "Watershed License Manager") }),
            new Port(6144, new List<Service> { new Service("statsci1-lm", "StatSci License Manager - 1") }),
            new Port(6145, new List<Service> { new Service("statsci2-lm", "StatSci License Manager - 2") }),
            new Port(6146, new List<Service> { new Service("lonewolf-lm", "Lone Wolf Systems License Manager") }),
            new Port(6147, new List<Service> { new Service("montage-lm", "Montage License Manager") }),
            new Port(6558, new List<Service> { new Service("xdsxdm") }),
            new Port(7000, new List<Service> { new Service("afs3-fileserver", "File server itself") }),
            new Port(7001, new List<Service> { new Service("afs3-callback", "Callbacks to cache managers") }),
            new Port(7002, new List<Service> { new Service("afs3-prserver", "Users & groups database") }),
            new Port(7003, new List<Service> { new Service("afs3-vlserver", "Volume location database") }),
            new Port(7004, new List<Service> { new Service("afs3-kaserver", "AFS/Kerberos authentication service") }),
            new Port(7005, new List<Service> { new Service("afs3-volser", "Volume managment server") }),
            new Port(7006, new List<Service> { new Service("afs3-errors", "Error interpretation service") }),
            new Port(7007, new List<Service> { new Service("afs3-bos", "Basic overseer process") }),
            new Port(7008, new List<Service> { new Service("afs3-update", "Server-to-server updater") }),
            new Port(7009, new List<Service> { new Service("afs3-rmtsys", "Remote cache manager service") }),
            new Port(7010, new List<Service> { new Service("ups-onlinet", "Online uninterruptable power supplies") }),
            new Port(7100, new List<Service> { new Service("font-service", "X Font Service") }),
            new Port(7200, new List<Service> { new Service("fodms", "FODMS FLIP") }),
            new Port(9535, new List<Service> { new Service("man") }),
            new Port(17007, new List<Service> { new Service("isode-dua") }),
            new Port(27036, new List<Service> { new Service("steam", "Steam Client Application") }),
            
        };

        public Port? Get(ushort portNumber)
        {
            return portDefinitions.SingleOrDefault(port => port.Number == portNumber);
        }

        public IEnumerable<Port> Search(string searchCriteria, StringComparison stringComparison)
        {
            return portDefinitions.Where(port => port.IsMatch(searchCriteria, stringComparison));
        }
    }
}